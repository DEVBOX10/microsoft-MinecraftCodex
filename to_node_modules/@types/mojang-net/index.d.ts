// Type definitions for Minecraft Bedrock Edition script APIs (experimental) 0.1
// Project: https://docs.microsoft.com/minecraft/creator/
// Definitions by: Jake Shirley <https://github.com/JakeShirley>
//                 Mike Ammerlaan <https://github.com/mammerla>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

/* *****************************************************************************
   Copyright (c) Microsoft Corporation.
   ***************************************************************************** */
/**
 * The `mojang-net` module contains types for executing
 * HTTP-based requests.
 *
 * Manifest Details
 * ```json
 * {
 *   // mojang-net
 *   "uuid": "777b1798-13a6-401c-9cba-0cf17e31a81b",
 *   "version": [ 0, 1, 0 ]
 * }
 * ```
 *
 */
 import * as mojangminecraftserveradmin from 'mojang-minecraft-server-admin';
 export enum HttpRequestMethod {
     POST = 0,
     PUT = 1,
     GET = 2,
     DELETE = 3,
     HEAD = 4,
 }
 export class HttpClient {
     /**
      * @remarks
      * Cancels all pending requests.
      * @param reason
      */
     cancelAll(reason: string): void;
     /**
      * @remarks
      * Performs a simple HTTP get request.
      * @param uri
      * URL to make an HTTP Request to.
      * @returns
      * An awaitable promise that contains the HTTP response.
      */
     get(uri: string): Promise<HttpResponse>;
     /**
      * @remarks
      * Performs an HTTP request.
      * @param config
      * Contains an HTTP Request object with configuration data on
      * the HTTP request.
      * @returns
      * An awaitable promise that contains the HTTP response.
      */
     request(config: HttpRequest): Promise<HttpResponse>;
     testOnly_fulfillRequest(requestId: number, headers: HttpHeader[], body: string, status: number): void;
     testOnly_getRequests(): number[];
     testOnly_rejectRequest(requestId: number, reason: string): void;
     protected constructor();
 }
 export class HttpHeader {
     'key': string;
     'value': string;
     constructor(key: string, value: mojangminecraftserveradmin.SecretString | string);
 }
 export class HttpRequest {
     'body': string;
     'headers': HttpHeader[];
     'method': HttpRequestMethod;
     'timeout': number;
     'uri': string;
     addHeader(key: string, value: string): HttpRequest;
     constructor(uri: string);
     setBody(body: string): HttpRequest;
     setHeaders(headers: HttpHeader[]): HttpRequest;
     setMethod(method: HttpRequestMethod): HttpRequest;
     setTimeout(timeout: number): HttpRequest;
 }
 export class HttpResponse {
     readonly 'body': string;
     readonly 'headers': HttpHeader[];
     readonly 'request': HttpRequest;
     readonly 'status': number;
     protected constructor();
 }
 export const http: HttpClient;
 